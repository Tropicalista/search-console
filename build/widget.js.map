{"version":3,"file":"widget.js","mappings":"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;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACA+B;AACa;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,4CAA4C;AAC5C,4CAA4C,+CAAQ;AACpD,gCAAgC,+CAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,+BAA+B;AACzC;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,KAAK;AACL,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,QAAQ,YAAY;AACpH;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA,QAAQ,uBAAuB,gBAAgB,gDAAmB;AAClE;AACA,UAAU,oBAAoB;AAC9B,yBAAyB,gDAAmB;AAC5C;AACA,KAAK;AACL;AACA;AACA,UAAU,UAAU;AACpB,yBAAyB,gDAAmB;AAC5C;AACA,KAAK;AACL;;AAEA;AACA,wCAAwC,4CAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oJAAoJ;AACtK,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA,mCAAmC,4CAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAsD;AACtE,6BAA6B,gDAAmB;AAChD;AACA,qCAAqC,gDAAmB,4CAA4C;AACpG;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;;AAEA,gCAAgC,4CAAe;AAC/C;AACA;AACA;AACA;AACA,cAAc,6CAA6C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA,mFAAmF,aAAa;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,gBAAgB,+BAA+B;AAC/C,6BAA6B,gDAAmB;AAChD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,0BAA0B,4CAAe;AACzC;AACA,gBAAgB,yGAAyG;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA,2BAA2B,qBAAqB;AAChD,wBAAwB,gDAAgD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oCAAoC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gDAAmB;AACpD;AACA;AACA,aAAa,gBAAgB,gDAAmB;AAChD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV,iCAAiC,gDAAmB;AACpD;AACA;AACA,aAAa;AACb,sBAAsB,eAAe;AACrC;AACA,aAAa;AACb,sBAAsB,eAAe;AACrC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAAe;AAC1D,yCAAyC,4CAAe;AACxD;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA,wBAAwB,8FAA8F;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA,aAAa;AACb;AACA,wBAAwB,yBAAyB;AACjD,wBAAwB,qBAAqB;AAC7C;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA,2FAA2F,aAAa;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB,qEAAqE;AACzF;AACA;AACA;AACA;AACA;AACA,iCAAiC,gDAAmB;AACpD;AACA;AACA;AACA,aAAa,2FAA2F,gDAAmB,CAAC,2CAAc,sBAAsB,gDAAmB;AACnL;AACA;AACA;AACA,aAAa,iBAAiB,gDAAmB;AACjD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qGAAqG,gDAAmB,CAAC,2CAAc;AACvI,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,sBAAsB,yBAAyB;AAC/C,qCAAqC,gDAAmB;AACxD;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iCAAiC,gDAAmB;AACpD;AACA,aAAa;AACb;AACA;AACA;;AAEA,sBAAsB,4CAAe;AACrC;AACA,gBAAgB,uFAAuF;AACvG,6BAA6B,gDAAmB;AAChD;AACA,SAAS,qFAAqF,gDAAmB,8BAA8B;AAC/I;AACA,SAAS,mGAAmG,gDAAmB;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;;AAEvE;;AAE6E;AAC7E;;;;;;;UC7vBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNgD;AAClB;AACoC;AAElE,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EACjB,OACC3I,oDAAA,CAACgB,iEAAuB,QACvBhB,oDAAA,CAACmI,+CAAM,MAAE,CACe,CAAC;AAE5B,CAAC;AAEDhK,MAAM,CAACyK,gBAAgB,CAAE,kBAAkB,EAAE,MAAM;EAClD,MAAMC,OAAO,GAAG1E,QAAQ,CAAC2E,cAAc,CAAE,uBAAwB,CAAC;EAClE,MAAMC,IAAI,GAAGL,8DAAU,CAAEG,OAAQ,CAAC;EAClCE,IAAI,CAACC,MAAM,CAAEhJ,oDAAA,CAAC2I,GAAG,MAAE,CAAE,CAAC;AACvB,CAAE,CAAC,C","sources":["webpack://search-console/./src/components/dashboard/chart/chart-options.js","webpack://search-console/./src/components/dashboard/chart/index.js","webpack://search-console/./src/components/loading-spinner.js","webpack://search-console/./src/context/settings-context.js","webpack://search-console/./src/store/index.js","webpack://search-console/./src/widget/widget.js","webpack://search-console/external window \"React\"","webpack://search-console/external window [\"wp\",\"apiFetch\"]","webpack://search-console/external window [\"wp\",\"components\"]","webpack://search-console/external window [\"wp\",\"coreData\"]","webpack://search-console/external window [\"wp\",\"data\"]","webpack://search-console/external window [\"wp\",\"date\"]","webpack://search-console/external window [\"wp\",\"element\"]","webpack://search-console/external window [\"wp\",\"i18n\"]","webpack://search-console/external window [\"wp\",\"notices\"]","webpack://search-console/external window [\"wp\",\"url\"]","webpack://search-console/./node_modules/react-google-charts/dist/index.js","webpack://search-console/webpack/bootstrap","webpack://search-console/webpack/runtime/compat get default export","webpack://search-console/webpack/runtime/define property getters","webpack://search-console/webpack/runtime/hasOwnProperty shorthand","webpack://search-console/webpack/runtime/make namespace object","webpack://search-console/./src/widget/index.js"],"sourcesContent":["export default {\n\twidth: '100%',\n\theight: '400',\n\tcolors: [ '#4285f4', '#5e35b1', '#00897b', '#E8710A' ],\n\tcurveType: 'function',\n\t//theme: 'material',\n\tsmoothline: 'true',\n\tfocusTarget: 'category',\n\tchartArea: {\n\t\t// leave room for y-axis labels\n\t\twidth: '100%',\n\t\theight: '80%',\n\t},\n\thAxis: {\n\t\tgridlines: {\n\t\t\tcount: 0,\n\t\t\tminSpacing: 150,\n\t\t},\n\t\tminorGridlines: { count: 0 },\n\t\tshowTextEvery: 1,\n\t\tformat: 'MMM dd',\n\t},\n\tvAxis: {\n\t\tgridlines: {\n\t\t\tcount: 0,\n\t\t\tminSpacing: 100,\n\t\t},\n\t\tminorGridlines: { count: 1 },\n\t\tshowTextEvery: 2,\n\t},\n\tvAxes: {\n\t\t0: { title: 'clicks' },\n\t\t1: { title: 'impressions' },\n\t\t2: {\n\t\t\tformat: '#%',\n\t\t},\n\t\t3: {\n\t\t\tdirection: -1,\n\t\t},\n\t},\n\tseries: {\n\t\t0: { type: 'line', targetAxisIndex: 0, tooltip: true }, // Clicks\n\t\t1: { type: 'line', targetAxisIndex: 1, tooltip: true }, // Impressions\n\t\t2: { type: 'line', targetAxisIndex: 2, tooltip: true }, // CTR\n\t\t3: { type: 'line', targetAxisIndex: 3, tooltip: true }, // Positions\n\t},\n};\n","import { Chart } from 'react-google-charts';\nimport Options from './chart-options';\nimport { useState, useEffect, useContext } from '@wordpress/element';\nimport { Spinner } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { SettingsContext } from '../../../context/settings-context';\n\nimport LoadingSpinner from '../../loading-spinner.js';\n\nexport function MyChart() {\n\tconst { settings, query, showError } = useContext( SettingsContext );\n\n\tconst [ table, setTable ] = useState( false );\n\n\tuseEffect( () => {\n\t\tif ( settings.token.access_token ) getData();\n\t}, [ query, settings.token ] );\n\n\tconst getData = () => {\n\t\twindow.gapi?.client?.setToken( settings.token );\n\n\t\twindow.gapi?.client?.webmasters?.searchanalytics\n\t\t\t.query( {\n\t\t\t\t...query,\n\t\t\t\tsiteUrl: settings.site,\n\t\t\t\tdimensions: [ 'date' ],\n\t\t\t\tfields: 'rows',\n\t\t\t} )\n\t\t\t.then( ( response ) => {\n\t\t\t\tconst data = response.result.rows;\n\t\t\t\tconst temp = [];\n\t\t\t\ttemp.push( [\n\t\t\t\t\t__( 'Keys', 'search-console' ),\n\t\t\t\t\t__( 'Clicks', 'search-console' ),\n\t\t\t\t\t__( 'Impressions', 'search-console' ),\n\t\t\t\t\t'CTR',\n\t\t\t\t\t__( 'Position', 'search-console' ),\n\t\t\t\t] );\n\t\t\t\tdata.forEach( ( row ) => {\n\t\t\t\t\ttemp.push( [\n\t\t\t\t\t\twindow.moment( row.keys[ 0 ], 'YYYY-MM-DD' ).toDate(),\n\t\t\t\t\t\trow.clicks,\n\t\t\t\t\t\trow.impressions,\n\t\t\t\t\t\trow.ctr * 100,\n\t\t\t\t\t\tparseFloat( row.position ),\n\t\t\t\t\t] );\n\t\t\t\t} );\n\t\t\t\tsetTable( temp );\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tshowError( error );\n\t\t\t} );\n\t};\n\n\tif ( ! table ) {\n\t\treturn (\n\t\t\t<LoadingSpinner text={ __( 'Fetching data…', 'search-console' ) } />\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"search-console-chart\">\n\t\t\t<Chart\n\t\t\t\tchartType=\"LineChart\"\n\t\t\t\tloader={ <Spinner /> }\n\t\t\t\tdata={ table }\n\t\t\t\toptions={ Options }\n\t\t\t\tlegendToggle\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import { Spinner } from '@wordpress/components';\n\nexport default function LoadingSpinner( { text } ) {\n\treturn (\n\t\t<div className=\"loading-settings\">\n\t\t\t<Spinner />\n\t\t\t<span className=\"description\">{ text }</span>\n\t\t</div>\n\t);\n}\n","import { useState, createContext, useEffect } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport { dateI18n } from '@wordpress/date';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore, useEntityProp } from '@wordpress/core-data';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\nexport const SettingsContext = createContext();\n\nfunction SettingsContextProvider( props ) {\n\tconst defaultQuery = {\n\t\tcustomDate: false,\n\t\ttype: 'web',\n\t\tstartDate: dateI18n(\n\t\t\t'Y-m-d',\n\t\t\tnew Date().setDate( new Date().getDate() - 29 )\n\t\t),\n\t\tendDate: dateI18n(\n\t\t\t'Y-m-d',\n\t\t\tnew Date().setDate( new Date().getDate() - 1 )\n\t\t),\n\t\tdimensions: [ 'QUERY' ],\n\t\tfields: 'rows',\n\t\tdimensionFilterGroups: {\n\t\t\tfilters: [],\n\t\t},\n\t};\n\n\tconst [ ready, setReady ] = useState( false );\n\tconst [ query, setQuery ] = useState( defaultQuery );\n\tconst [ loading, setLoading ] = useState( false );\n\tconst [ email, setEmail ] = useState( false );\n\n\tconst [ settings, setSettings ] = useEntityProp(\n\t\t'root',\n\t\t'site',\n\t\t'search_console'\n\t);\n\n\tconst { saveEditedEntityRecord } = useDispatch( coreStore );\n\tconst { createNotice } = useDispatch( noticesStore );\n\n\tconst saveSettings = async () => {\n\t\treturn saveEditedEntityRecord( 'root', 'site' )\n\t\t\t.then( () => {\n\t\t\t\tcreateNotice(\n\t\t\t\t\t'info',\n\t\t\t\t\t'🎯 ' + __( 'Settings saved.', 'formello' ),\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tcreateNotice( 'error', '⚠️ ' + error.message, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\texplicitDismiss: true,\n\t\t\t\t} );\n\t\t\t} );\n\t};\n\n\tconst showError = ( error ) => {\n\t\tif ( 401 !== error.status ) {\n\t\t\tcreateNotice( 'error', '⚠️ ' + error.result.error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\texplicitDismiss: true,\n\t\t\t} );\n\t\t}\n\t\tif ( 401 === error.status ) {\n\t\t\trefreshToken();\n\t\t}\n\t};\n\n\tconst { isSaving, hasEdits } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisSaving: select( coreStore ).isSavingEntityRecord(\n\t\t\t\t'root',\n\t\t\t\t'site'\n\t\t\t),\n\t\t\thasEdits: select( coreStore ).hasEditsForEntityRecord(\n\t\t\t\t'root',\n\t\t\t\t'site',\n\t\t\t\tundefined,\n\t\t\t\t'search_console'\n\t\t\t),\n\t\t} ),\n\t\t[]\n\t);\n\n\tconst refreshToken = () => {\n\t\tsetLoading( true );\n\t\tapiFetch( {\n\t\t\tpath: '/searchconsole/v1/refresh',\n\t\t\tmethod: 'POST',\n\t\t} )\n\t\t\t.then( ( result ) => {\n\t\t\t\tsetSettings( {\n\t\t\t\t\t...settings,\n\t\t\t\t\ttoken: result,\n\t\t\t\t} );\n\t\t\t\twindow.gapi.client.setToken( result );\n\t\t\t\tloadSearchConsole();\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log( error );\n\t\t\t\tloadSearchConsole();\n\t\t\t} )\n\t\t\t.finally( () => setLoading( false ) );\n\t};\n\n\tconst revokeToken = () => {\n\t\tapiFetch( {\n\t\t\tpath: '/searchconsole/v1/revoke',\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\ttoken: settings.token.refresh_token,\n\t\t\t},\n\t\t} ).then( () => {\n\t\t\tupdateSetting( 'token', {\n\t\t\t\taccess_token: '',\n\t\t\t\texpires_in: 3600,\n\t\t\t\tid_token: '',\n\t\t\t\trefresh_token: '',\n\t\t\t\tscope: '',\n\t\t\t\ttoken_type: '',\n\t\t\t} );\n\t\t\tsetEmail( false );\n\t\t} );\n\t};\n\n\tconst updateSetting = ( key, value ) => {\n\t\tsetSettings( { ...settings, [ key ]: value } );\n\t};\n\n\tconst updateQuery = ( key, value ) => {\n\t\tsetQuery( { ...query, [ key ]: value } );\n\t};\n\n\tuseEffect( () => {\n\t\tconst handleClientLoad = async () =>\n\t\t\tawait window.gapi.load( 'client', loadSearchConsole );\n\n\t\tconst script = document.createElement( 'script' );\n\n\t\tscript.src = 'https://apis.google.com/js/api.js';\n\t\tscript.async = true;\n\t\tscript.defer = true;\n\t\tscript.onload = handleClientLoad;\n\n\t\tdocument.body.appendChild( script );\n\n\t\treturn () => {\n\t\t\tdocument.body.removeChild( script );\n\t\t};\n\t}, [] );\n\n\tconst loadSearchConsole = () => {\n\t\twindow.gapi.client.setToken( window.search_console.token );\n\t\twindow.gapi.client.load( 'searchconsole', 'v1' ).then( () => {\n\t\t\tcheck();\n\t\t} );\n\t};\n\n\tconst check = () => {\n\t\tsetReady( true );\n\t};\n\n\treturn (\n\t\t<SettingsContext.Provider\n\t\t\tvalue={ {\n\t\t\t\tquery,\n\t\t\t\tupdateQuery,\n\t\t\t\tsettings,\n\t\t\t\tupdateSetting,\n\t\t\t\tsetSettings,\n\t\t\t\tsaveSettings,\n\t\t\t\tisSaving,\n\t\t\t\tready,\n\t\t\t\trefreshToken,\n\t\t\t\trevokeToken,\n\t\t\t\temail,\n\t\t\t\thasEdits,\n\t\t\t\tshowError,\n\t\t\t} }\n\t\t>\n\t\t\t{ props.children }\n\t\t</SettingsContext.Provider>\n\t);\n}\n\nexport default SettingsContextProvider;\n","import apiFetch from '@wordpress/api-fetch';\nimport { createReduxStore, register } from '@wordpress/data';\nimport { dateI18n } from '@wordpress/date';\n\nconst DEFAULT_STATE = {\n\tsettings: false,\n\tsites: [\n\t\t{\n\t\t\tlabel: 'Select a site',\n\t\t\tvalue: '',\n\t\t},\n\t],\n\tcustomDate: false,\n\tdimension: 'query',\n\tsearchType: 'web',\n\tstartDate: dateI18n(\n\t\t'Y-m-d',\n\t\tnew Date().setDate( new Date().getDate() - 29 )\n\t),\n\tendDate: dateI18n(\n\t\t'Y-m-d',\n\t\tnew Date().setDate( new Date().getDate() - 1 )\n\t),\n\tfilters: [],\n};\n\nconst actions = {\n\tsetSites( sites ) {\n\t\treturn {\n\t\t\ttype: 'SET_SITES',\n\t\t\tsites,\n\t\t};\n\t},\n\n\tsetSettings( settings ) {\n\t\treturn {\n\t\t\ttype: 'SET_SETTINGS',\n\t\t\tsettings,\n\t\t};\n\t},\n\n\tsetSetting( setting, value ) {\n\t\treturn {\n\t\t\ttype: 'SET_SETTING',\n\t\t\tsetting,\n\t\t\tvalue,\n\t\t};\n\t},\n\n\tsetSearchType( searchType ) {\n\t\treturn {\n\t\t\ttype: 'SET_SEARCHTYPE',\n\t\t\tsearchType,\n\t\t};\n\t},\n\n\tsetFilter( filter ) {\n\t\treturn {\n\t\t\ttype: 'SET_FILTER',\n\t\t\tfilter,\n\t\t};\n\t},\n\n\tsetDimension( dimension ) {\n\t\treturn {\n\t\t\ttype: 'SET_DIMENSION',\n\t\t\tdimension,\n\t\t};\n\t},\n\n\tsetCustomDate( val ) {\n\t\treturn {\n\t\t\ttype: 'SET_CUSTOMDATE',\n\t\t\tval,\n\t\t};\n\t},\n\n\tsetStartDate( date ) {\n\t\treturn {\n\t\t\ttype: 'SET_STARTDATE',\n\t\t\tdate,\n\t\t};\n\t},\n\n\tsetEndDate( date ) {\n\t\treturn {\n\t\t\ttype: 'SET_ENDDATE',\n\t\t\tdate,\n\t\t};\n\t},\n\n\tremoveFilter( filter ) {\n\t\treturn {\n\t\t\ttype: 'REMOVE_FILTER',\n\t\t\tfilter,\n\t\t};\n\t},\n\n\tfetchFromAPI( path ) {\n\t\treturn {\n\t\t\ttype: 'FETCH_FROM_API',\n\t\t\tpath,\n\t\t};\n\t},\n};\n\nconst store = createReduxStore( 'searchconsole', {\n\treducer( state = DEFAULT_STATE, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'SET_SETTINGS':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tsettings: action.settings,\n\t\t\t\t};\n\n\t\t\tcase 'SET_SITES':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tsites: action.sites,\n\t\t\t\t};\n\n\t\t\tcase 'SET_SETTING':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\t...state.settings,\n\t\t\t\t\t\t[ action.setting ]: action.value,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\tcase 'SET_SEARCHTYPE':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tsearchType: action.searchType,\n\t\t\t\t};\n\n\t\t\tcase 'SET_DIMENSION':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tdimension: action.dimension,\n\t\t\t\t};\n\n\t\t\tcase 'SET_CUSTOMDATE':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcustomDate: action.val,\n\t\t\t\t};\n\n\t\t\tcase 'SET_STARTDATE':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tstartDate: action.date,\n\t\t\t\t};\n\n\t\t\tcase 'SET_ENDDATE':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tendDate: action.date,\n\t\t\t\t};\n\n\t\t\tcase 'SET_FILTER':\n\t\t\t\tconst newFilter = {\n\t\t\t\t\tdimension: action.filter.dimension,\n\t\t\t\t\texpression: action.filter.expression,\n\t\t\t\t\toperator: action.filter.operator,\n\t\t\t\t};\n\t\t\t\tconst arr = state.filters.filter( ( f ) => {\n\t\t\t\t\treturn f.dimension !== action.filter.dimension;\n\t\t\t\t} );\n\t\t\t\tarr.push( newFilter );\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tfilters: arr,\n\t\t\t\t};\n\n\t\t\tcase 'REMOVE_FILTER':\n\t\t\t\tconst cleanArr = state.filters.filter( ( f ) => {\n\t\t\t\t\treturn f.dimension !== action.filter.dimension;\n\t\t\t\t} );\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tfilters: cleanArr,\n\t\t\t\t};\n\t\t}\n\n\t\treturn state;\n\t},\n\n\tactions,\n\n\tselectors: {\n\t\tisReady( state ) {\n\t\t\treturn state.settings ?? false;\n\t\t},\n\t\tgetSettings( state ) {\n\t\t\tconst { settings } = state;\n\t\t\treturn settings;\n\t\t},\n\t\tgetSites( state ) {\n\t\t\tconst { sites } = state;\n\t\t\treturn sites;\n\t\t},\n\t\tgetSite( state ) {\n\t\t\tconst { settings } = state;\n\t\t\treturn settings.site;\n\t\t},\n\t\tgetQuery( state ) {\n\t\t\tconst { searchType, filters, dimension, startDate, endDate } =\n\t\t\t\tstate;\n\t\t\treturn {\n\t\t\t\tdimension,\n\t\t\t\tstartDate,\n\t\t\t\tendDate,\n\t\t\t\tsearchType,\n\t\t\t\tfilters,\n\t\t\t};\n\t\t},\n\t\tgetFilterByDimension( state, filter ) {\n\t\t\tif ( ! state.filters.length ) {\n\t\t\t\treturn {\n\t\t\t\t\tdimension: '',\n\t\t\t\t\texpression: '',\n\t\t\t\t\toperator: '',\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst target = state.filters.find( ( f ) => {\n\t\t\t\treturn f.dimension === filter;\n\t\t\t} );\n\t\t\treturn target;\n\t\t},\n\t\tgetSearchType( state ) {\n\t\t\tconst { searchType } = state;\n\t\t\treturn searchType;\n\t\t},\n\t\tgetFilters( state ) {\n\t\t\tconst { filters } = state;\n\t\t\treturn filters;\n\t\t},\n\t\tgetCustomDate( state ) {\n\t\t\tconst { customDate } = state;\n\t\t\treturn customDate;\n\t\t},\n\t},\n\n\tcontrols: {\n\t\tFETCH_FROM_API( action ) {\n\t\t\treturn apiFetch( { path: action.path } );\n\t\t},\n\t},\n\n\tresolvers: {\n\t\t*getSettings() {\n\t\t\tconst path = '/searchconsole/v1/settings/';\n\t\t\tconst settings = yield actions.fetchFromAPI( path );\n\t\t\treturn actions.setSettings( settings );\n\t\t},\n\t},\n} );\n\nregister( store );\n","/**\n * WordPress dependencies\n */\nimport { RawHTML, useContext } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Notice } from '@wordpress/components';\nimport { addQueryArgs } from '@wordpress/url';\n\nimport { MyChart } from '../components/dashboard/chart';\nimport LoadingSpinner from '../components/loading-spinner.js';\nimport { SettingsContext } from '../context/settings-context';\nimport '../store';\n\nconst Widget = () => {\n\tconst { settings, ready } = useContext( SettingsContext );\n\tconst settingsUrl = addQueryArgs( 'admin.php', {\n\t\tpage: 'search-console',\n\t} );\n\n\tif ( ! ready || ! settings ) {\n\t\treturn (\n\t\t\t<LoadingSpinner text={ __( 'Fetching data…', 'search-console' ) } />\n\t\t);\n\t}\n\n\tif (\n\t\t! settings?.site ||\n\t\t! settings?.credentials?.client_secret ||\n\t\t! settings?.credentials?.client_id\n\t) {\n\t\treturn (\n\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t<RawHTML>\n\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t/* translators: Search console settings url. */\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'<p>You need to authenticate and set a site on <a href=\"%s\">settings page</a>.</p>',\n\t\t\t\t\t\t\t'formello'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsettingsUrl\n\t\t\t\t\t) }\n\t\t\t\t</RawHTML>\n\t\t\t</Notice>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<MyChart />\n\t\t\t<RawHTML>\n\t\t\t\t{ sprintf(\n\t\t\t\t\t/* translators: Developer console url. */\n\t\t\t\t\t__(\n\t\t\t\t\t\t'<p>More data on <a href=\"%s\">Search Console dashboard</a>.</p>',\n\t\t\t\t\t\t'formello'\n\t\t\t\t\t),\n\t\t\t\t\tsettingsUrl + '#/'\n\t\t\t\t) }\n\t\t\t</RawHTML>\n\t\t</div>\n\t);\n};\n\nexport default Widget;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"date\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"url\"];","import * as React from 'react';\nimport { useEffect, useState } from 'react';\n\n/**\n * Hook to load external script.\n * @param src - Source url to load.\n * @param onLoad - Success callback.\n * @param onError - Error callback.\n */ function useLoadScript(src, onLoad, onError) {\n    useEffect(()=>{\n        if (!document) {\n            return;\n        }\n        // Find script tag with same src in DOM.\n        const foundScript = document.querySelector(\"script[src=\\\"\".concat(src, \"\\\"]\"));\n        // Call onLoad if script marked as loaded.\n        if (foundScript === null || foundScript === void 0 ? void 0 : foundScript.dataset.loaded) {\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad();\n            return;\n        }\n        // Create or get existed tag.\n        const script = foundScript || document.createElement(\"script\");\n        // Set src if no script was found.\n        if (!foundScript) {\n            script.src = src;\n        }\n        // Mark script as loaded on load event.\n        const onLoadWithMarker = ()=>{\n            script.dataset.loaded = \"1\";\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad();\n        };\n        script.addEventListener(\"load\", onLoadWithMarker);\n        if (onError) {\n            script.addEventListener(\"error\", onError);\n        }\n        // Add to DOM if not yet added.\n        if (!foundScript) {\n            document.head.append(script);\n        }\n        return ()=>{\n            script.removeEventListener(\"load\", onLoadWithMarker);\n            if (onError) {\n                script.removeEventListener(\"error\", onError);\n            }\n        };\n    }, []);\n}\n\n/**\n * Hook to load Google Charts JS API.\n * @param params - Load parameters.\n * @param [params.chartVersion] - Chart version to load.\n * @param [params.chartPackages] - Packages to load.\n * @param [params.chartLanguage] - Languages to load.\n * @param [params.mapsApiKey] - Google Maps api key.\n * @returns\n */ function useLoadGoogleCharts(param) {\n    let { chartVersion =\"current\" , chartPackages =[\n        \"corechart\",\n        \"controls\"\n    ] , chartLanguage =\"en\" , mapsApiKey  } = param;\n    const [googleCharts, setGoogleCharts] = useState(null);\n    const [failed, setFailed] = useState(false);\n    useLoadScript(\"https://www.gstatic.com/charts/loader.js\", ()=>{\n        // @ts-expect-error Getting object from global namespace.\n        const google = window === null || window === void 0 ? void 0 : window.google;\n        if (!google) {\n            return;\n        }\n        google.charts.load(chartVersion, {\n            packages: chartPackages,\n            language: chartLanguage,\n            mapsApiKey\n        });\n        google.charts.setOnLoadCallback(()=>{\n            setGoogleCharts(google);\n        });\n    }, ()=>{\n        setFailed(true);\n    });\n    return [\n        googleCharts,\n        failed\n    ];\n}\n/**\n * Wrapper around useLoadGoogleCharts to use in legacy components.\n */ function LoadGoogleCharts(param) {\n    let { onLoad , onError , ...params } = param;\n    const [googleCharts, failed] = useLoadGoogleCharts(params);\n    useEffect(()=>{\n        if (googleCharts && onLoad) {\n            onLoad(googleCharts);\n        }\n    }, [\n        googleCharts\n    ]);\n    useEffect(()=>{\n        if (failed && onError) {\n            onError();\n        }\n    }, [\n        failed\n    ]);\n    return null;\n}\n\nconst chartDefaultProps = {\n    // <DEPRECATED_PROPS>\n    legend_toggle: false,\n    // </DEPRECATED_PROPS>\n    options: {},\n    legendToggle: false,\n    getChartWrapper: ()=>{},\n    spreadSheetQueryParameters: {\n        headers: 1,\n        gid: 1\n    },\n    rootProps: {},\n    chartWrapperParams: {}\n};\n\nlet uniqueID = 0;\nconst generateUniqueID = ()=>{\n    uniqueID += 1;\n    return \"reactgooglegraph-\".concat(uniqueID);\n};\n\nconst DEFAULT_CHART_COLORS = [\n    \"#3366CC\",\n    \"#DC3912\",\n    \"#FF9900\",\n    \"#109618\",\n    \"#990099\",\n    \"#3B3EAC\",\n    \"#0099C6\",\n    \"#DD4477\",\n    \"#66AA00\",\n    \"#B82E2E\",\n    \"#316395\",\n    \"#994499\",\n    \"#22AA99\",\n    \"#AAAA11\",\n    \"#6633CC\",\n    \"#E67300\",\n    \"#8B0707\",\n    \"#329262\",\n    \"#5574A6\",\n    \"#3B3EAC\"\n];\n\nconst loadDataTableFromSpreadSheet = async function(googleViz, spreadSheetUrl) {\n    let urlParams = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    return new Promise((resolve, reject)=>{\n        const headers = \"\".concat(urlParams.headers ? \"headers=\".concat(urlParams.headers) : \"headers=0\");\n        const queryString = \"\".concat(urlParams.query ? \"&tq=\".concat(encodeURIComponent(urlParams.query)) : \"\");\n        const gid = \"\".concat(urlParams.gid ? \"&gid=\".concat(urlParams.gid) : \"\");\n        const sheet = \"\".concat(urlParams.sheet ? \"&sheet=\".concat(urlParams.sheet) : \"\");\n        const access_token = \"\".concat(urlParams.access_token ? \"&access_token=\".concat(urlParams.access_token) : \"\");\n        const urlQueryString = \"\".concat(headers).concat(gid).concat(sheet).concat(queryString).concat(access_token);\n        const urlToSpreadSheet = \"\".concat(spreadSheetUrl, \"/gviz/tq?\").concat(urlQueryString); //&tq=${queryString}`;\n        const query = new googleViz.visualization.Query(urlToSpreadSheet);\n        query.send((response)=>{\n            if (response.isError()) {\n                reject(\"Error in query:  \".concat(response.getMessage(), \" \").concat(response.getDetailedMessage()));\n            } else {\n                resolve(response.getDataTable());\n            }\n        });\n    });\n};\n\nconst { Provider , Consumer  } = /*#__PURE__*/ React.createContext(chartDefaultProps);\nconst ContextProvider = (param)=>{\n    let { children , value  } = param;\n    return(/*#__PURE__*/ React.createElement(Provider, {\n        value: value\n    }, children));\n};\nconst ContextConsumer = (param)=>{\n    let { render  } = param;\n    return(/*#__PURE__*/ React.createElement(Consumer, null, (context)=>{\n        return render(context);\n    }));\n};\n\nconst GRAY_COLOR = \"#CCCCCC\";\nclass GoogleChartDataTableInner extends React.Component {\n    componentDidMount() {\n        this.draw(this.props);\n        window.addEventListener(\"resize\", this.onResize);\n        if (this.props.legend_toggle || this.props.legendToggle) {\n            this.listenToLegendToggle();\n        }\n    }\n    componentWillUnmount() {\n        const { google , googleChartWrapper  } = this.props;\n        window.removeEventListener(\"resize\", this.onResize);\n        google.visualization.events.removeAllListeners(googleChartWrapper);\n        if (googleChartWrapper.getChartType() === \"Timeline\") {\n            googleChartWrapper.getChart() && googleChartWrapper.getChart().clearChart();\n        }\n    }\n    componentDidUpdate() {\n        this.draw(this.props);\n    }\n    render() {\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        this.state = {\n            hiddenColumns: []\n        };\n        this.listenToLegendToggle = ()=>{\n            const { google , googleChartWrapper  } = this.props;\n            google.visualization.events.addListener(googleChartWrapper, \"select\", ()=>{\n                const chart = googleChartWrapper.getChart();\n                const selection = chart.getSelection();\n                const dataTable = googleChartWrapper.getDataTable();\n                if (selection.length === 0 || // We want to listen to when a whole row is selected. This is the case only when row === null\n                selection[0].row || !dataTable) {\n                    return;\n                }\n                const columnIndex = selection[0].column;\n                const columnID = this.getColumnID(dataTable, columnIndex);\n                if (this.state.hiddenColumns.includes(columnID)) {\n                    this.setState((state)=>({\n                            ...state,\n                            hiddenColumns: [\n                                ...state.hiddenColumns.filter((colID)=>colID !== columnID\n                                ), \n                            ]\n                        })\n                    );\n                } else {\n                    this.setState((state)=>({\n                            ...state,\n                            hiddenColumns: [\n                                ...state.hiddenColumns,\n                                columnID\n                            ]\n                        })\n                    );\n                }\n            });\n        };\n        this.applyFormatters = (dataTable, formatters)=>{\n            const { google  } = this.props;\n            for (let formatter of formatters){\n                switch(formatter.type){\n                    case \"ArrowFormat\":\n                        {\n                            const vizFormatter = new google.visualization.ArrowFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"BarFormat\":\n                        {\n                            const vizFormatter = new google.visualization.BarFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"ColorFormat\":\n                        {\n                            const vizFormatter = new google.visualization.ColorFormat(formatter.options);\n                            const { ranges  } = formatter;\n                            for (let range of ranges){\n                                vizFormatter.addRange(...range);\n                            }\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"DateFormat\":\n                        {\n                            const vizFormatter = new google.visualization.DateFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"NumberFormat\":\n                        {\n                            const vizFormatter = new google.visualization.NumberFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"PatternFormat\":\n                        {\n                            const vizFormatter = new google.visualization.PatternFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                }\n            }\n        };\n        this.getColumnID = (dataTable, columnIndex)=>{\n            return dataTable.getColumnId(columnIndex) || dataTable.getColumnLabel(columnIndex);\n        };\n        this.draw = async (param)=>{\n            let { data , diffdata , rows , columns , options , legend_toggle , legendToggle , chartType , formatters , spreadSheetUrl , spreadSheetQueryParameters  } = param;\n            const { google , googleChartWrapper  } = this.props;\n            let dataTable;\n            let chartDiff = null;\n            if (diffdata) {\n                const oldData = google.visualization.arrayToDataTable(diffdata.old);\n                const newData = google.visualization.arrayToDataTable(diffdata.new);\n                chartDiff = google.visualization[chartType].prototype.computeDiff(oldData, newData);\n            }\n            if (data !== null) {\n                if (Array.isArray(data)) {\n                    dataTable = google.visualization.arrayToDataTable(data);\n                } else {\n                    dataTable = new google.visualization.DataTable(data);\n                }\n            } else if (rows && columns) {\n                dataTable = google.visualization.arrayToDataTable([\n                    columns,\n                    ...rows\n                ]);\n            } else if (spreadSheetUrl) {\n                dataTable = await loadDataTableFromSpreadSheet(google, spreadSheetUrl, spreadSheetQueryParameters);\n            } else {\n                dataTable = google.visualization.arrayToDataTable([]);\n            }\n            const columnCount = dataTable.getNumberOfColumns();\n            for(let i = 0; i < columnCount; i += 1){\n                const columnID = this.getColumnID(dataTable, i);\n                if (this.state.hiddenColumns.includes(columnID)) {\n                    const previousColumnLabel = dataTable.getColumnLabel(i);\n                    const previousColumnID = dataTable.getColumnId(i);\n                    const previousColumnType = dataTable.getColumnType(i);\n                    dataTable.removeColumn(i);\n                    dataTable.addColumn({\n                        label: previousColumnLabel,\n                        id: previousColumnID,\n                        type: previousColumnType\n                    });\n                }\n            }\n            const chart = googleChartWrapper.getChart();\n            if (googleChartWrapper.getChartType() === \"Timeline\") {\n                chart && chart.clearChart();\n            }\n            googleChartWrapper.setChartType(chartType);\n            googleChartWrapper.setOptions(options || {});\n            googleChartWrapper.setDataTable(dataTable);\n            googleChartWrapper.draw();\n            if (this.props.googleChartDashboard !== null) {\n                this.props.googleChartDashboard.draw(dataTable);\n            }\n            if (chartDiff) {\n                googleChartWrapper.setDataTable(chartDiff);\n                googleChartWrapper.draw();\n            }\n            if (formatters) {\n                this.applyFormatters(dataTable, formatters);\n                googleChartWrapper.setDataTable(dataTable);\n                googleChartWrapper.draw();\n            }\n            if (legendToggle === true || legend_toggle === true) {\n                this.grayOutHiddenColumns({\n                    options\n                });\n            }\n            return;\n        };\n        this.grayOutHiddenColumns = (param)=>{\n            let { options  } = param;\n            const { googleChartWrapper  } = this.props;\n            const dataTable = googleChartWrapper.getDataTable();\n            if (!dataTable) return;\n            const columnCount = dataTable.getNumberOfColumns();\n            const hasAHiddenColumn = this.state.hiddenColumns.length > 0;\n            if (hasAHiddenColumn === false) return;\n            const colors = Array.from({\n                length: columnCount - 1\n            }).map((dontcare, i)=>{\n                const columnID = this.getColumnID(dataTable, i + 1);\n                if (this.state.hiddenColumns.includes(columnID)) {\n                    return GRAY_COLOR;\n                } else if (options && options.colors) {\n                    return options.colors[i];\n                } else {\n                    return DEFAULT_CHART_COLORS[i];\n                }\n            });\n            googleChartWrapper.setOptions({\n                ...options,\n                colors\n            });\n            googleChartWrapper.draw();\n        };\n        this.onResize = ()=>{\n            const { googleChartWrapper  } = this.props;\n            googleChartWrapper.draw();\n        };\n    }\n}\nclass GoogleChartDataTable extends React.Component {\n    componentDidMount() {}\n    componentWillUnmount() {}\n    shouldComponentUpdate() {\n        return false;\n    }\n    render() {\n        const { google , googleChartWrapper , googleChartDashboard  } = this.props;\n        return(/*#__PURE__*/ React.createElement(ContextConsumer, {\n            render: (props)=>{\n                return(/*#__PURE__*/ React.createElement(GoogleChartDataTableInner, Object.assign({}, props, {\n                    google: google,\n                    googleChartWrapper: googleChartWrapper,\n                    googleChartDashboard: googleChartDashboard\n                })));\n            }\n        }));\n    }\n}\n\nclass GoogleChartEvents extends React.Component {\n    shouldComponentUpdate() {\n        return false;\n    }\n    listenToEvents(param) {\n        let { chartEvents , google , googleChartWrapper  } = param;\n        if (!chartEvents) {\n            return;\n        }\n        google.visualization.events.removeAllListeners(googleChartWrapper);\n        for (let event of chartEvents){\n            var _this = this;\n            const { eventName , callback  } = event;\n            google.visualization.events.addListener(googleChartWrapper, eventName, function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                callback({\n                    chartWrapper: googleChartWrapper,\n                    props: _this.props,\n                    google: google,\n                    eventArgs: args\n                });\n            });\n        }\n    }\n    render() {\n        const { google , googleChartWrapper  } = this.props;\n        return(/*#__PURE__*/ React.createElement(ContextConsumer, {\n            render: (propsFromContext)=>{\n                this.listenToEvents({\n                    chartEvents: propsFromContext.chartEvents || null,\n                    google,\n                    googleChartWrapper\n                });\n                return null;\n            }\n        }));\n    }\n}\n\nlet controlCounter = 0;\nclass GoogleChart extends React.Component {\n    componentDidMount() {\n        const { options , google , chartType , chartWrapperParams , toolbarItems , getChartEditor , getChartWrapper ,  } = this.props;\n        const chartConfig = {\n            chartType,\n            options,\n            containerId: this.getGraphID(),\n            ...chartWrapperParams\n        };\n        const googleChartWrapper = new google.visualization.ChartWrapper(chartConfig);\n        googleChartWrapper.setOptions(options || {});\n        if (getChartWrapper) {\n            getChartWrapper(googleChartWrapper, google);\n        }\n        const googleChartDashboard = new google.visualization.Dashboard(this.dashboard_ref);\n        const googleChartControls = this.addControls(googleChartWrapper, googleChartDashboard);\n        if (toolbarItems) {\n            google.visualization.drawToolbar(this.toolbar_ref.current, toolbarItems);\n        }\n        let googleChartEditor = null;\n        if (getChartEditor) {\n            googleChartEditor = new google.visualization.ChartEditor();\n            getChartEditor({\n                chartEditor: googleChartEditor,\n                chartWrapper: googleChartWrapper,\n                google\n            });\n        }\n        this.setState({\n            googleChartEditor,\n            googleChartControls: googleChartControls,\n            googleChartDashboard: googleChartDashboard,\n            googleChartWrapper,\n            isReady: true\n        });\n    }\n    componentDidUpdate() {\n        if (!this.state.googleChartWrapper) return;\n        if (!this.state.googleChartDashboard) return;\n        if (!this.state.googleChartControls) return;\n        const { controls  } = this.props;\n        if (controls) {\n            for(let i = 0; i < controls.length; i += 1){\n                const { controlType , options , controlWrapperParams  } = controls[i];\n                if (controlWrapperParams && \"state\" in controlWrapperParams) {\n                    this.state.googleChartControls[i].control.setState(controlWrapperParams[\"state\"]);\n                }\n                this.state.googleChartControls[i].control.setOptions(options);\n                this.state.googleChartControls[i].control.setControlType(controlType);\n            }\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.isReady !== nextState.isReady || nextProps.controls !== this.props.controls;\n    }\n    render() {\n        const { width , height , options , style  } = this.props;\n        const divStyle = {\n            height: height || options && options.height,\n            width: width || options && options.width,\n            ...style\n        };\n        if (this.props.render) {\n            return(/*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.dashboard_ref,\n                style: divStyle\n            }, /*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.toolbar_ref,\n                id: \"toolbar\"\n            }), this.props.render({\n                renderChart: this.renderChart,\n                renderControl: this.renderControl,\n                renderToolbar: this.renderToolBar\n            })));\n        } else {\n            return(/*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.dashboard_ref,\n                style: divStyle\n            }, this.renderControl((param)=>{\n                let { controlProp  } = param;\n                return controlProp.controlPosition !== \"bottom\";\n            }), this.renderChart(), this.renderControl((param)=>{\n                let { controlProp  } = param;\n                return controlProp.controlPosition === \"bottom\";\n            }), this.renderToolBar()));\n        }\n    }\n    constructor(...args1){\n        var _this1;\n        super(), _this1 = this;\n        this.state = {\n            googleChartWrapper: null,\n            googleChartDashboard: null,\n            googleChartControls: null,\n            googleChartEditor: null,\n            isReady: false\n        };\n        this.graphID = null;\n        this.dashboard_ref = /*#__PURE__*/ React.createRef();\n        this.toolbar_ref = /*#__PURE__*/ React.createRef();\n        this.getGraphID = ()=>{\n            const { graphID , graph_id  } = this.props;\n            let instanceGraphID;\n            if (!graphID && !graph_id) {\n                if (!this.graphID) {\n                    instanceGraphID = generateUniqueID();\n                } else {\n                    instanceGraphID = this.graphID;\n                }\n            } else if (graphID && !graph_id) {\n                instanceGraphID = graphID;\n            } else if (graph_id && !graphID) {\n                instanceGraphID = graph_id;\n            } else {\n                instanceGraphID = graphID;\n            }\n            this.graphID = instanceGraphID;\n            return this.graphID;\n        };\n        this.getControlID = (id, index)=>{\n            controlCounter += 1;\n            let controlID;\n            if (typeof id === \"undefined\") {\n                controlID = \"googlechart-control-\".concat(index, \"-\").concat(controlCounter);\n            } else {\n                controlID = id;\n            }\n            return controlID;\n        };\n        this.addControls = (googleChartWrapper, googleChartDashboard)=>{\n            const { google , controls  } = this.props;\n            const googleChartControls = !controls ? null : controls.map((control, i)=>{\n                const { controlID: controlIDMaybe , controlType , options: controlOptions , controlWrapperParams ,  } = control;\n                const controlID = this.getControlID(controlIDMaybe, i);\n                return {\n                    controlProp: control,\n                    control: new google.visualization.ControlWrapper({\n                        containerId: controlID,\n                        controlType,\n                        options: controlOptions,\n                        ...controlWrapperParams\n                    })\n                };\n            });\n            if (!googleChartControls) {\n                return null;\n            }\n            googleChartDashboard.bind(googleChartControls.map((param)=>{\n                let { control  } = param;\n                return control;\n            }), googleChartWrapper);\n            for (let chartControl of googleChartControls){\n                const { control , controlProp  } = chartControl;\n                const { controlEvents =[]  } = controlProp;\n                for (let event of controlEvents){\n                    var _this = this;\n                    const { callback , eventName  } = event;\n                    google.visualization.events.removeListener(control, eventName, callback);\n                    google.visualization.events.addListener(control, eventName, function() {\n                        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                            args[_key] = arguments[_key];\n                        }\n                        callback({\n                            chartWrapper: googleChartWrapper,\n                            controlWrapper: control,\n                            props: _this.props,\n                            google: google,\n                            eventArgs: args\n                        });\n                    });\n                }\n            }\n            return googleChartControls;\n        };\n        this.renderChart = ()=>{\n            const { width , height , options , style , className , rootProps , google  } = this.props;\n            const divStyle = {\n                height: height || options && options.height,\n                width: width || options && options.width,\n                ...style\n            };\n            return(/*#__PURE__*/ React.createElement(\"div\", Object.assign({\n                id: this.getGraphID(),\n                style: divStyle,\n                className: className\n            }, rootProps), this.state.isReady && this.state.googleChartWrapper !== null ? /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(GoogleChartDataTable, {\n                googleChartWrapper: this.state.googleChartWrapper,\n                google: google,\n                googleChartDashboard: this.state.googleChartDashboard\n            }), /*#__PURE__*/ React.createElement(GoogleChartEvents, {\n                googleChartWrapper: this.state.googleChartWrapper,\n                google: google\n            })) : null));\n        };\n        this.renderControl = function() {\n            let filter = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (param)=>{\n                return true;\n            };\n            return _this1.state.isReady && _this1.state.googleChartControls !== null ? /*#__PURE__*/ React.createElement(React.Fragment, null, _this1.state.googleChartControls.filter((param)=>{\n                let { controlProp , control  } = param;\n                return filter({\n                    control,\n                    controlProp\n                });\n            }).map((param)=>{\n                let { control , controlProp  } = param;\n                return(/*#__PURE__*/ React.createElement(\"div\", {\n                    key: control.getContainerId(),\n                    id: control.getContainerId()\n                }));\n            })) : null;\n        };\n        this.renderToolBar = ()=>{\n            if (!this.props.toolbarItems) return null;\n            return(/*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.toolbar_ref\n            }));\n        };\n    }\n}\n\nclass Chart$1 extends React.Component {\n    render() {\n        const { chartLanguage , chartPackages , chartVersion , mapsApiKey , loader , errorElement ,  } = this.props;\n        return(/*#__PURE__*/ React.createElement(ContextProvider, {\n            value: this.props\n        }, this.state.loadingStatus === \"ready\" && this.state.google !== null ? /*#__PURE__*/ React.createElement(GoogleChart, Object.assign({}, this.props, {\n            google: this.state.google\n        })) : this.state.loadingStatus === \"errored\" && errorElement ? errorElement : loader, /*#__PURE__*/ React.createElement(LoadGoogleCharts, {\n            chartLanguage: chartLanguage,\n            chartPackages: chartPackages,\n            chartVersion: chartVersion,\n            mapsApiKey: mapsApiKey,\n            onLoad: this.onLoad,\n            onError: this.onError\n        })));\n    }\n    componentDidMount() {\n        this._isMounted = true;\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    isFullyLoaded(google) {\n        const { controls , toolbarItems , getChartEditor  } = this.props;\n        return google && google.visualization && google.visualization.ChartWrapper && google.visualization.Dashboard && (!controls || google.visualization.ChartWrapper) && (!getChartEditor || google.visualization.ChartEditor) && (!toolbarItems || google.visualization.drawToolbar);\n    }\n    constructor(...args){\n        super(...args);\n        this._isMounted = false;\n        this.state = {\n            loadingStatus: \"loading\",\n            google: null\n        };\n        this.onLoad = (google1)=>{\n            if (this.props.onLoad) {\n                this.props.onLoad(google1);\n            }\n            if (this.isFullyLoaded(google1)) {\n                this.onSuccess(google1);\n            } else {\n                // IE11: window.google is not fully set, we have to wait\n                const id = setInterval(()=>{\n                    const google = window.google;\n                    if (this._isMounted) {\n                        if (google && this.isFullyLoaded(google)) {\n                            clearInterval(id);\n                            this.onSuccess(google);\n                        }\n                    } else {\n                        clearInterval(id);\n                    }\n                }, 1000);\n            }\n        };\n        this.onSuccess = (google)=>{\n            this.setState({\n                loadingStatus: \"ready\",\n                google\n            });\n        };\n        this.onError = ()=>{\n            this.setState({\n                loadingStatus: \"errored\"\n            });\n        };\n    }\n}\nChart$1.defaultProps = chartDefaultProps;\n\nvar GoogleDataTableColumnRoleType;\n(function(GoogleDataTableColumnRoleType) {\n    GoogleDataTableColumnRoleType[\"annotation\"] = \"annotation\";\n    GoogleDataTableColumnRoleType[\"annotationText\"] = \"annotationText\";\n    GoogleDataTableColumnRoleType[\"certainty\"] = \"certainty\";\n    GoogleDataTableColumnRoleType[\"emphasis\"] = \"emphasis\";\n    GoogleDataTableColumnRoleType[\"interval\"] = \"interval\";\n    GoogleDataTableColumnRoleType[\"scope\"] = \"scope\";\n    GoogleDataTableColumnRoleType[\"style\"] = \"style\";\n    GoogleDataTableColumnRoleType[\"tooltip\"] = \"tooltip\";\n    GoogleDataTableColumnRoleType[\"domain\"] = \"domain\";\n})(GoogleDataTableColumnRoleType || (GoogleDataTableColumnRoleType = {}));\n\nvar Chart = Chart$1;\n\nexport { Chart$1 as Chart, GoogleDataTableColumnRoleType, Chart as default };\n//# sourceMappingURL=index.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot } from '@wordpress/element';\nimport Widget from './widget';\nimport SettingsContextProvider from '../context/settings-context';\n\nconst App = () => {\n\treturn (\n\t\t<SettingsContextProvider>\n\t\t\t<Widget />\n\t\t</SettingsContextProvider>\n\t);\n};\n\nwindow.addEventListener( 'DOMContentLoaded', () => {\n\tconst domNode = document.getElementById( 'search-console-widget' );\n\tconst root = createRoot( domNode );\n\troot.render( <App /> );\n} );\n"],"names":["width","height","colors","curveType","smoothline","focusTarget","chartArea","hAxis","gridlines","count","minSpacing","minorGridlines","showTextEvery","format","vAxis","vAxes","title","direction","series","type","targetAxisIndex","tooltip","Chart","Options","useState","useEffect","useContext","Spinner","__","SettingsContext","LoadingSpinner","MyChart","settings","query","showError","table","setTable","token","access_token","getData","window","gapi","client","setToken","webmasters","searchanalytics","siteUrl","site","dimensions","fields","then","response","data","result","rows","temp","push","forEach","row","moment","keys","toDate","clicks","impressions","ctr","parseFloat","position","catch","error","createElement","text","className","chartType","loader","options","legendToggle","createContext","apiFetch","dateI18n","store","coreStore","useEntityProp","useDispatch","useSelect","noticesStore","SettingsContextProvider","props","defaultQuery","customDate","startDate","Date","setDate","getDate","endDate","dimensionFilterGroups","filters","ready","setReady","setQuery","loading","setLoading","email","setEmail","setSettings","saveEditedEntityRecord","createNotice","saveSettings","message","explicitDismiss","status","refreshToken","isSaving","hasEdits","select","isSavingEntityRecord","hasEditsForEntityRecord","undefined","path","method","loadSearchConsole","console","log","finally","revokeToken","refresh_token","updateSetting","expires_in","id_token","scope","token_type","key","value","updateQuery","handleClientLoad","load","script","document","src","async","defer","onload","body","appendChild","removeChild","search_console","check","Provider","children","createReduxStore","register","DEFAULT_STATE","sites","label","dimension","searchType","actions","setSites","setSetting","setting","setSearchType","setFilter","filter","setDimension","setCustomDate","val","setStartDate","date","setEndDate","removeFilter","fetchFromAPI","reducer","state","action","newFilter","expression","operator","arr","f","cleanArr","selectors","isReady","_state$settings","getSettings","getSites","getSite","getQuery","getFilterByDimension","length","target","find","getSearchType","getFilters","getCustomDate","controls","FETCH_FROM_API","resolvers","RawHTML","sprintf","Notice","addQueryArgs","Widget","settingsUrl","page","credentials","client_secret","client_id","isDismissible","createRoot","App","addEventListener","domNode","getElementById","root","render"],"sourceRoot":""}