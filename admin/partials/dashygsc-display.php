<?php

/**
 * Provide a admin area view for the plugin
 *
 * This file is used to markup the admin-facing aspects of the plugin.
 *
 * @link       https://tropicalseo.net
 * @since      1.0.0
 *
 * @package    DashyLite 
 * @subpackage DashyLite/admin/partials
 */

//Grab all options
$options = $this->getOptionsAndRefreshToken();

// Cleanup
$site = $options['site'];

if(empty($options['site'])){
  echo('<h1>Go to settings to choose your site from Search Console</h1>');
  echo('<a href="' . admin_url( 'admin.php?page=' . $this->plugin_name ) . 'settings">' . __('Settings', $this->plugin_name) . '</a>');
}
?>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<script src="https://apis.google.com/js/api.js"></script>

<div id="search-console-widget">
  <div><i class="hidden dashicons dashicons-update spin" id="showSpinner"></i></div>
  <select id="dashygsc-sel-period">
    <option value="14" selected="selected">Last 14 days</option>
    <option value="30">Last 30 days</option>
    <option value="60">Last 60 days</option>
  </select>

  <div id="dashy-gsc"></div>
  <div>report generated by <a href="https://tropicalseo.net">TropicalSeo</a></div>

</div>
<script>

// global variables
var access_token = "<?php echo($options['token']['access_token']) ?>";
var site = "<?php echo($site) ?>";
var data,chart;
var period = $('select[id=dashygsc-sel-period]').val();

$('select[id=dashygsc-sel-period]').change(function(){
  period= $(this).val();
  getReport();
});

google.charts.load('current', {'packages':['corechart']});

var chartOptions = {
  width: '100%',
  height: 400,
  focusTarget: 'category',
  chartArea: {
    // leave room for y-axis labels
    width: '94%'
  },
  hAxis: {
    showTextEvery: 4
  },
  vAxes: {
      0: {direction: -1, maxValue:1, textPosition: 'none'},
      1: {textPosition: 'none' },
      2: {textPosition: 'none' },
      3: {textPosition: 'none' }
  },
  series: {
      0: { type: "line", targetAxisIndex: 1, tooltip: true },
      1: { type: "line", targetAxisIndex: 2, tooltip: true },
      2: { type: "line", targetAxisIndex: 3, tooltip: true },
      3: { type: "line", targetAxisIndex: 0, tooltip: true },
      4: { type: "line", targetAxisIndex: 0, tooltip: true }
  }
}

function formatData(rows) {
    var data = new google.visualization.DataTable();
    data.addColumn('date', 'Keys');
    data.addColumn('number', 'Clicks');
    data.addColumn('number', 'Impressions');
    data.addColumn('number', 'CTR');
    data.addColumn('number', 'Position');

    _.forEach(rows, function(row){
      data.addRow([
        new Date(row.keys[0]),
        row.clicks,
        row.impressions,
        (row.ctr * 100),
        parseFloat(row.position)
      ]);
    })
  return data      
}

function selectHandler(){

  var col = chart.getSelection()[0].column
  if(!col){return}

  var selection = chart.getSelection();       

  // click and data index are one off
  var i = selection[0].column - 1;
  chartOptions.series[i].tooltip = !chartOptions.series[i].tooltip


  // just simple reverse
  if (chartOptions.series[i].lineWidth == 0) {
      chartOptions.series[i].lineWidth = 2;
      chartOptions.series[i].areaOpacity = 0.3;
  }
  else {
      chartOptions.series[i].lineWidth = 0;
      chartOptions.series[i].areaOpacity = 0.0;            
  }

  chart.draw(data, chartOptions);

}

function getReport(){
  gapi.client.webmasters.searchanalytics.query(
          {
              'siteUrl': site,
              'rowLimit': null,
              'searchType': 'web',
              'startDate': moment().subtract(period, 'days').format('YYYY-MM-DD'),
              'endDate': moment().format('YYYY-MM-DD'),
              'dimensions': ['date']
          })
          .then((response) => {
            //var options = chartOptions
            data = formatData(response.result.rows)
            chart = new google.visualization.LineChart(document.getElementById('dashy-gsc'));
            chart.draw(data, chartOptions);
            google.visualization.events.addListener(chart, 'select', selectHandler);


          })
          .then(null, function(err) {
              console.log(err);
          });      
}

(function( $ ) {
    'use strict';

    if(access_token){
        gapi.load('client', start);
    }

    function start(){
        $('#showSpinner').toggleClass('hidden');

        gapi.client.load('webmasters', 'v3')
            .then(function(){


                gapi.auth.setToken({access_token:access_token})

                getReport();
                $('#showSpinner').toggleClass('hidden');
            
        })  

    }

})( jQuery );
</script>

<style type="text/css">
.dashicons.spin {
   animation: dashicons-spin 1s infinite;
   animation-timing-function: linear;
}

@keyframes dashicons-spin {
   0% {
      transform: rotate( 0deg );
   }
   100% {
      transform: rotate( 360deg );
   }
}   
</style>